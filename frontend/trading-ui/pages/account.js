import Head from 'next/head';
import Navbar from './components/Navigations/NavBar';
import TraderList from './components/Tables/TraderList';
import AddTraderModal from './components/Modals/AddTraderModal';
import axios from 'axios';
import { useState } from 'react';
import { getAllTraderUrl } from '../util/constants';

const account = ({ traders, error }) => {
  const [showUpdateTraderModal, setShowUpdateTraderModal] = useState(false);
  const [getTraders, setTraders] = useState(traders);
  const colForDashboardPageTable = ["First Name", "Last Name", "Email", "Gender", "Country", "Date of Birth", "Action"];
  return (
    <div className="flex">
      <Head>
        <title>Trading app</title>
        <meta name="React application which shows data obtained from apis. Users should be able to see: a list of all traders, a daily list of quotes, details of a specific trader, should be able to create a new trader/quote/withdrawal of funds" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="bg-white dark:bg-gray-800 flex flex-col w-18 h-screen px-4 py-8 overflow-y-auto border-r">
        <div className="flex flex-col justify-between mt-2" style={{ height: "100%" }}>
          <Navbar />
        </div>
      </div>

      <div className="w-full h-full sm:p-4 md:p-8 overflow-y-auto">
        <div className=" items-center justify-center">
          <h1 className="sm:text-3xl text-2xl font-medium title-font mb-2 text-gray-900">Accounts</h1>          
          {showUpdateTraderModal ? <AddTraderModal closeModal={setShowAddTraderModal} setTraders={setTraders} /> : null}
          <TraderList col={colForDashboardPageTable} initialAllTraders={getTraders} actions={"update"}/>
        </div>
      </div>
    </div>
  );
};

export default account;


const fetchData = async () =>
    await axios.get(getAllTraderUrl).then(res => ({
        error: false,
        traders: res.data,
    })).catch(() => ({
        error: true,
        traders: [],
    }),
);

export const getServerSideProps = async () => {
    const data = await fetchData();
    return { props: data};
}